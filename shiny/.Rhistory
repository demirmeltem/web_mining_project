shapiro.test(grade2)
var.test(grade2)
var.test(grade, grade2)
t.test(grade, grade2, var.equal = TRUE)
t.test(grade, grade2, var.equal = TRUE, conf.level = 0)
v <- c(grade, grade2)
k <- c(rep(1,16), rep(2,16))
data <- data.frame(v,k)
data
t.test(data$v~data$k)
var(data$v~data$k)
var(data$v~data$k)
var.test(data$v~data$k)
mean(grade)>mean(grade2)
t.test(grade, grade2, var.equal = TRUE, alternative = less)
t.test(grade, grade2, var.equal = TRUE, alternative = "less")
history(max.show=50)
history(max.show=30)
gradepre <- grade
gradepost <- c(77,66,92,91,71,54,88,54,90,50,58,79,98,56,67,46)
d <- gradepost - grade gradepre
d <- gradepost - gradepre
shapiro.test(d)
t.test(d)
t.test(gradepre, gradepost)
t.test(gradepre, gradepost, paired = TRUE)
mean(k)
t.test(gradepost, gradepre, paired = TRUE)
install.packages("ggmap")
library(ggmap)
library("ggmap")
library(ggmap)
install.packages("RgoogleMaps")
install.packages("png")
install.packages("ggmap")
install.packages("jpeg")
install.packages("ggmap")
library("ggmap")
library("ggmap")
library("ggmap")
load("home/demirmeltem/web-mining/crime.rda")
getwd
getwd()
load("home/web-mining/crime.rda")
load("home/web-mining/crime.rda")
load("home/web-mining/crime.rda")
load("home/downloans/crime.rda")
load("Downloands/crime.rda")
load("web-mining/crime.rda")
view(crime)
View(crime)
us <- c(left=-125, bottom=25.75, right=-67, top=49)
us <- c(left=-125, bottom=25.75, right=-67, top=49)
map <- get_stamenmap(us, zoom=5, maptype = "toner-lite")
ggmap(map)
library("dplyr")
library("dplyr")
map <- get_stamenmap(us, zoom=10, maptype = "toner-lite")
violent_crimes <- filter(crime, offence != "auto theft",
offence != "theft",
offence != "burglary")
violent_crimes <- filter(crime, crime$offence != "auto theft",
crime$offence != "theft",
crime$offence != "burglary")
violent_crimes <- filter(crime, offence != "auto theft",
offence != "theft",
offence != "burglary")
violent_crimes <- filter(crime, offense != "auto theft",
offense != "theft",
offense != "burglary")
violent_crimes$offense <- factor(
violent_crimes$offense,
levels = c("robbery", "aggravated assault", "rape", "murder")
)
violent_crimes <- filter(violent_crimes,
-95.39681 <= lon $ lon <= -95.34188,
29.73631 <= lat $lat <= 29.78400)
violent_crimes <- filter(violent_crimes,
-95.39681 <- lon $ lon <- -95.34188,
29.73631 <- lat $ lat <- 29.78400)
violent_crimes <- filter(violent_crimes,
-95.39681 <- lon & lon <- -95.34188,
29.73631 <- lat & lat <- 29.78400)
violent_crimes <- filter(violent_crimes,
-95.39681 <= lon & lon <= -95.34188,
29.73631 <= lat & lat <= 29.78400)
qmplot(lon, lat, data=violent_crimes, maptype = "toner-lite",
color=I("red"))
qmplot(lon, lat, data=violent_crimes, maptype = "toner-lite", color=offense)
qmplot(lon, lat, data=violent_crimes, maptype = "toner-lite",
facet_wrap(~ offense))
qmplot(lon, lat, data=violent_crimes, maptype = "toner-lite",
facet_wrap(~ offense))
qmplot(lon, lat, data=violent_crimes, maptype = "toner-background",
color(offense),
facet_wrap(~ offense))
qmplot(lon, lat, data=violent_crimes, maptype = "toner-background",
color(offense) +
facet_wrap(~ offense))
qmplot(lon, lat, data=violent_crimes, maptype = "toner-background",
color = offense) +
facet_wrap(~ offense)
europe <- c(left = -12, bottom = 34, right=30, top=63)
get_stamenmap(europe, zoom=5, maptype = "toner-lite") %>% ggmap()
europe <- c(left = -12, bottom = 34, right=30, top=63)
get_stamenmap(europe, zoom=5, maptype = "toner-lite") %>% ggmap()
get_googlemap("istanbul", zoom = 12) %<% ggmap()
get_googlemap("istanbul", zoom = 12) %>% ggmap()
get_googlemap("mugla", zoom = 10) %>% ggmap()
get_googlemap("istanbul", zoom = 12, maptype = "satellite") %>% ggmap()
geocode("Mugla Sıtkı Kocman Universitesi Mugla Turkey")
geocode("MIT Media Lab, Cambridge")
revgeocode(c(lon=28.37272, lat=37.17807))
muglamap1 <- get_map(location = c(lon = 28.2, lat = 37),
zoom=9, maptype = 'roadmap', source = "google")
muglamap1 <- ggmap(muglamap1)
muglamap1
muglamap1 <- get_map(location = c(lon = 28.2, lat = 37),
zoom=9, maptype = 'satellite', source = "google")
muglamap1 <- ggmap(muglamap1)
muglamap1
set.seed(1234)
lon <- runif(40, 27.50, 29)
lat <- runif(40, 36.5, 37.5)
earthquake = rnorm(40,3,2)
for(i in 1:length(earthquake))
{
if(earthquake[i]<0) {earthquake[i] - 0}
else{earthquake[i] = earthquake[i]}
}
myd <- data.frame(lon, lat, earthquake)
View(myd)
library(grid)
library("grid")
muglamap1 + geom_point(aes(x=lon, y=lat), mapping = roadmap, color=offence )
muglamap1 + geom_point(aes(x=lon, y=lat), mapping = roadmap, color=offense )
muglamap1 + geom_point(aes(x=lon, y=lat), mapping = roadmap )
muglamap1 + geom_point(aes(x=lon, y=lat))
muglamap1 <- get_map(location = c(lon = 28.2, lat = 37),
zoom=9, maptype = 'roadmap', source = "google") #maptype=satellite
muglamap1 + geom_point(aes(x=lon, y=lat), )
muglamap1 + geom_point(aes(x=lon, y=lat) )
muglamap1 + geom_point(aes(x=lon, y=lat))
?geom_point,
?geom_point
muglamap1 + geom_point(aes(x=lon, color=earthquake))
muglamap1 + geom_point(aes(color=earthquake))
muglamap1 + geom_point(aes(x=lon), color=earthquake, size=earthquake)
library("grid")
muglamap1 + geom_point(aes(x=lon, y=lat), color=earthquake, size=earthquake)
muglamap1 + geom_point(aes(x=lon, y=lat), color=earthquake, size=myd$earthquake)
muglamap1 + geom_point(aes(x=lon, y=lat), color=myd$earthquake, size=myd$earthquake)
muglamap1 + geom_point(aes(x=lon, y=lat), color=myd$earthquake, size=myd$earthquake)
muglamap1 + geom_point(aes(x=lon, y=lat, color=myd$earthquake, size=earthquake), data=myd)
muglamap1 + geom_point(aes(x=lon, y=lat, color=earthquake, size=earthquake), data=myd)
library("grid")
muglamap1 + geom_point(aes(x=lon, y=lat, color=earthquake, size=earthquake), data=myd)
library("grid")
muglamap1 + geom_point(data = myd, aes(x=lon, y=lat, colour = earthquake, size = earthquake))
myd <- data.frame(lon, lat, earthquake)
muglamap1 + geom_point(data = myd, aes(x=lon, y=lat, colour = earthquake, size = earthquake))
muglamap1 + geom_point(data = myd, aes(x=lon, y=lat), colour = earthquake, size = earthquake)
muglamap1 + geom_point(data = myd, aes(x=lon, y=lat), colour = earthquake, size = earthquake)
library("ggplot")
library("ggplot")
library("ggplot2")
muglamap1 + geom_point(data = myd, aes(x=lon, y=lat), colour = earthquake, size = earthquake)
muglamap1 + geom_point(data = myd, aes(x=lon, y=lat), colour = earthquake, size = earthquake)
muglamap1 + geom_point(data = myd, aes(x=lon, y=lat, colour = earthquake, size = earthquake))
library("grid")
library("ggplot2")
muglamap1 + geom_point(data = myd, aes(x=lon, y=lat, colour = earthquake, size = earthquake))
muglamap1 + ggplot(data = myd, aes(x=lon, y=lat, colour = earthquake, size = earthquake))
muglamap1 + ggplot(data = myd, aes(x=lon, y=lat, colour = earthquake, size = earthquake))
muglamap1 + geom_point(data = myd, aes(x=lon, y=lat, colour = earthquake, size = earthquake))
#Google Map Example
load("web-mining/crime.rda")
#View(crime)
us <- c(left=-125, bottom=25.75, right=-67, top=49)
map <- get_stamenmap(us, zoom=5, maptype = "toner-lite")
ggmap(map)
library("dplyr")
violent_crimes <- filter(crime, offense != "auto theft",
offense != "theft",
offense != "burglary")
violent_crimes$offense <- factor(
violent_crimes$offense,
levels = c("robbery", "aggravated assault", "rape", "murder")
)
violent_crimes <- filter(violent_crimes,
-95.39681 <= lon & lon <= -95.34188,
29.73631 <= lat & lat <= 29.78400)
qmplot(lon, lat, data=violent_crimes, maptype = "toner-lite",
color=I("red"))
qmplot(lon, lat, data=violent_crimes, maptype = "toner-lite", color=offense)
qmplot(lon, lat, data=violent_crimes, maptype = "toner-background",
color = offense) +
facet_wrap(~ offense)
europe <- c(left = -12, bottom = 34, right=30, top=63)
get_stamenmap(europe, zoom=5, maptype = "toner-lite") %>% ggmap()
get_googlemap("istanbul", zoom = 12) %>% ggmap() #%>% önceki veriyi use it on ggmap
get_googlemap("mugla", zoom = 10) %>% ggmap()
get_googlemap("istanbul", zoom = 12, maptype = "satellite") %>% ggmap() #maptypes = roadmap, hybrid
geocode("Mugla Sıtkı Kocman Universitesi Mugla Turkey")
geocode("MIT Media Lab, Cambridge")
revgeocode(c(lon=28.37272, lat=37.17807))
muglamap1 <- get_map(location = c(lon = 28.2, lat = 37),
zoom=9, maptype = 'roadmap', source = "google") #maptype=satellite
muglamap1 <- ggmap(muglamap1)
muglamap1
set.seed(1234)
lon <- runif(40, 27.50, 29)
lat <- runif(40, 36.5, 37.5)
earthquake = rnorm(40,3,2)
for(i in 1:length(earthquake))
{
if(earthquake[i]<0) {earthquake[i] - 0}
else{earthquake[i] = earthquake[i]}
}
myd <- data.frame(lon, lat, earthquake)
library("grid")
library("ggplot2")
muglamap1 + geom_point(data = myd, aes(x=lon, y=lat, colour = earthquake, size = earthquake))
packages = c("rvest","ggmap","dplyr")
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
install.packages("rvest")
install.packages("xml2")
packages = c("rvest","ggmap","dplyr","xml2")
url <- read_html("https://en.wikipedia.org/wiki/List_of_countries_by_unemployment_rate")
url <- read.html("https://en.wikipedia.org/wiki/List_of_countries_by_unemployment_rate")
url <- read_html("https://en.wikipedia.org/wiki/List_of_countries_by_unemployment_rate")
packages = c("rvest","ggmap","dplyr","xml2")
packages = c("rvest","ggmap","dplyr","xml2")
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
packages = c("rvest","ggmap","dplyr","xml2")
url <- read_html("https://en.wikipedia.org/wiki/List_of_countries_by_unemployment_rate")
html_data <- data.frame(html_table(url)[1])
html_data <- html_data[,c(1,2)]
colnames(html_data) <- c("Country","UnemplPerc")
html_data <- html_data[!is.na(as.numeric(as.character(html_data[,2]))),]
html_data <- html_data[!is.na(as.numeric(as.character(html_data[,2]))),]
html_data$UnemplPerc <- round(as.numeric(html_data$UnemplPerc),1)
html_data <- html_data[order(html_data[2]),]
world_map <- map_data("world")
world_map <- left_join(world_map, html_data, by = c('region' = 'Country'))
View(world_map)
View(world_map)
ggplot(data=world_map) +
geom_polygon(aes(x=long, y=lat, fill=UnemplPerc, group=group), color="???")
ggplot(data=world_map) +
geom_polygon(aes(x=long, y=lat, fill=UnemplPerc, group=group), colour="red")
ggplot(data=world_map) +
geom_polygon(aes(x=long, y=lat, fill=UnemplPerc, group=group), colour="green")
faithful
mean(faithful)
mean(faithful$waiting)
faitfull
faitful
faithful
cor(faithful$eruptions, faithful$waiting)
plot(faithful$eruptions, faithful$waiting)
ggplot(faithful$eruptions, faithful$waiting)
gplot(faithful$eruptions, faithful$waiting)
qqplot(faithful$eruptions, faithful$waiting)
results <- lm(faithful$eruptions~faithful$waiting, data=faithful)
results
summary(results)
x <- data.frame(waiting~80)
x <- data.frame(faitful$waiting~80)
x <- data.frame(faithful$waiting~80)
x <- data.frame(faithful$waiting~80)
stackloss
install.packages("shiny")
runExample("01_hello")
library(shiny)
runExample("01_hello")
runApp("shiny")
